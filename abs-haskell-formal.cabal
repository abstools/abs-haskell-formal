name: abs-haskell-formal
version: 0.0.1

license: BSD3
license-file: LICENSE
author: Elvira Albert, Nikolaos Bezirgiannis, Frank de Boer, Enrique Martin,
maintainer: Nikolaos Bezirgiannis <bezirgia@cwi.nl>
copyright: Copyright (c) 2013-2015, The Envisage Consortium
homepage: http://abs-models.org
bug-reports: https://github.com/abstools/abs-haskell-formal/issues

stability: provisional
tested-with: GHC == 7.8.4, GHC == 7.10.1, GHC == 7.10.2, GHC == 7.10.3
build-type: Simple
cabal-version: >= 1.8

category: Concurrency
synopsis: Translating ABS to Haskell to prove correctness & resource consumption
description: 
  Translating ABS to Haskell to prove correctness & resource consumption

extra-source-files:
  README.md

source-repository head
  type:     git
  location: git://github.com/abstools/abs-haskell-formal.git
  branch: master

library
  build-depends:      base >= 4.7 && < 5,
                      -- for scheduler-queue of objects, and dequeue of processes inside an object with Data.Sequence
                      containers,
                      -- for the heap array: heap of objects (each with an attr array) and futures (either [listener] value)
                      vector
  exposed-modules:
                      -- * the ABS' AST and the ABS-runtime data-structures
                      Base,
                      -- * a single-statement evaluator/interpreter of ABS terms (from AST)
                      Eval,
                      -- * the global-system scheduler that schedules concurrent-objects and their processes
                      Sched,
                      -- * for debugging a Heap result of an execution (Show-instances for heap and process)
                      Debug,
                      -- * Wrapper module that reexports all of the above modules
                      ABS
  other-modules:
                      -- * purely-functional queues (taken from Okasaki)
                      Q                                    
  hs-source-dirs:     src
  ghc-options:        -Wall
                                                                                        